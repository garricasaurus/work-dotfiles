### Variables

set {

    $cfgdir "$HOME/dotfiles/sway"
    $font   "Fira Code 10"
    $icons  "Arc"

    # mod key
    $mod Mod4

    # vim keys
    $left  h
    $down  j
    $up    k
    $right l

    # application commands
    $term    "alacritty"
    $browser "librewolf"
    $comms   "slack"
    $email   "thunderbird"

    # utils
    $lock       "swaylock"
    $sshot      "grimshot"
    $volume     "$cfgdir/volume.sh"
    $brightness "$cfgdir/brightness.sh"
    $refresh    "/usr/local/bin/okki-refresh"

    # application launcher
    #   note: pass the final command to swaymsg so that the resulting window can be opened
    #   on the original workspace that the command was run on.
    $menu dmenu_path | dmenu | xargs swaymsg exec --

    # screens
    $screen1 "eDP-1"
    $screen2 "HDMI-A-1"
}

### Output configuration

# screen positions
output $screen1 pos 0 360
output $screen2 pos 1920,0

# screen to workspace assignments
workspace 1 output $screen1
workspace 2 output $screen1
workspace 3 output $screen1
workspace 4 output $screen1
workspace 5 output $screen1

workspace 6 output $screen2
workspace 7 output $screen2
workspace 8 output $screen2
workspace 9 output $screen2

# focus output without triggering a reload
exec swaymsg focus output eDP-1

# wallpaper
exec_always swaybg -i `$cfgdir/get_wallpaper.sh`

### Idle configuration

#exec swayidle -w \
#         timeout 600 'swaylock -f -c 000000' \
#         timeout 900 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#         before-sleep 'swaylock -f -c 000000'

### Input configuration

input type:touchpad {
    tap            enabled
    natural_scroll disabled
    dwt            enabled
}

input type:keyboard {
    xkb_layout   us,hu
    xkb_options  grp:rctrl_rshift_toggle
}

### Key bindings

bindsym {

    # system
    $mod+Shift+e          exit
    $mod+Shift+q          kill
    $mod+Shift+c          reload
    $mod+r                mode "resize"
    $mod+Shift+p          exec $lock

    # launcher
    $mod+d                exec $menu

    # app bindings
    $mod+Shift+Return     exec $term
    $mod+Shift+KP_Enter   exec $term
    $mod+Shift+w          exec $browser
    $mod+Shift+Ctrl+w     exec $browser -private-window

    # switch workspace
    $mod+1                workspace number 1
    $mod+2                workspace number 2
    $mod+3                workspace number 3
    $mod+4                workspace number 4
    $mod+5                workspace number 5

    # move focus
    $mod+$left            focus left
    $mod+$down            focus down
    $mod+$up              focus up
    $mod+$right           focus right

    $mod+left             focus left
    $mod+down             focus down
    $mod+up               focus up
    $mod+right            focus right

    $mod+space            focus mode_toggle
    $mod+a                focus parent

    # move container
    $mod+Shift+$left      move left
    $mod+Shift+$down      move down
    $mod+Shift+$up        move up
    $mod+Shift+$right     move right

    $mod+Shift+left       move left
    $mod+Shift+down       move down
    $mod+Shift+up         move up
    $mod+Shift+right      move right

    $mod+Shift+1          move container to workspace number 1
    $mod+Shift+2          move container to workspace number 2
    $mod+Shift+3          move container to workspace number 3
    $mod+Shift+4          move container to workspace number 4
    $mod+Shift+5          move container to workspace number 5

    # layouts
    $mod+b                splith
    $mod+v                splitv
    $mod+s                layout stacking
    $mod+w                layout tabbed
    $mod+e                layout toggle split
    $mod+f                fullscreen
    $mod+Shift+space      floating toggle

    # multimedia keys
    XF86AudioMute                   exec $volume     mute     && exec $refresh volume
    XF86AudioRaiseVolume            exec $volume     up   1   && exec $refresh volume
    XF86AudioLowerVolume            exec $volume     down 1   && exec $refresh volume
    Shift+XF86AudioRaiseVolume      exec $volume     up   10  && exec $refresh volume
    Shift+XF86AudioLowerVolume      exec $volume     down 10  && exec $refresh volume
    XF86MonBrightnessUp             exec $brightness up   1   && exec $refresh brightness
    XF86MonBrightnessDown           exec $brightness down 1   && exec $refresh brightness
    Shift+XF86MonBrightnessUp       exec $brightness up   10  && exec $refresh brightness
    Shift+XF86MonBrightnessDown     exec $brightness down 10  && exec $refresh brightness

    # screenshot
    Print              exec $sshot copy screen
    Shift+Print        exec $sshot copy output
    Ctrl+Print         exec $sshot copy area
    Alt+Print          exec $sshot copy window
    $mod+Print         exec $sshot save screen   `$cfgdir/get_sshot.sh`
    $mod+Shift+Print   exec $sshot save output   `$cfgdir/get_sshot.sh`
    $mod+Ctrl+Print    exec $sshot save area     `$cfgdir/get_sshot.sh`
    $mod+Alt+Print     exec $sshot save window   `$cfgdir/get_sshot.sh`
}

# drag
floating_modifier $mod normal

### Resize Mode

mode "resize" {
    bindsym {
        $left   resize shrink   width   10px
        $down   resize grow     height  10px
        $up     resize shrink   height  10px
        $right  resize grow     width   10px
        left    resize shrink   width   10px
        down    resize grow     height  10px
        up      resize shrink   height  10px
        right   resize grow     width   10px
        Return  mode "default"
        Escape  mode "default"
    }
}

### Color Palette
set {
    $col_black   #1e2127
    $col_white   #abb2bf
    $col_gray    #2e3340
    $col_red     #e06c75
    $col_blue    #324f73
}

### Window Setup
default_border    pixel
smart_borders     no_gaps
smart_gaps        on
gaps              inner 5
hide_edge_borders smart_no_gaps


### Status Bar

bar {

    font              $font
    position          top
    status_command    /usr/local/bin/okki-status

    colors {
        statusline             $col_white
        background             $col_black
        focused_workspace      $col_black    $col_blue    $col_white
        inactive_workspace     $col_black    $col_black   $col_white
        active_workspace       $col_black    $col_gray    $col_white
        urgent_workspace       $col_black    $col_red     $col_white
    }

    tray {
        icon_theme     $icons
        tray_padding   5
    }
}

### Window Rules
# discover window class 'swaymsg -t get_tree'
for_window [app_id="mpv"]             floating enable
for_window [app_id="zoom"]            floating enable
for_window [title="Battle.net"]       floating enable
for_window [app_id="zenity"]          floating enable

include /etc/sway/config.d/*
